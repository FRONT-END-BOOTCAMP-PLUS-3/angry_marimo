name: Deploy Next.js to Server with Playwright & Vitest

on:
  push:
    branches:
          - main
          - deploy

jobs:
  # 빌드 단계
  build:
    runs-on: [self-hosted, angry-marimo]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          clean: true  # ✅ 기존 파일을 삭제하고 새로 Clone

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Next.js Project
        run: npm run build

  # 테스트 단계 (Playwright + Vitest)
  test:
    needs: build
    timeout-minutes: 60
    runs-on: [self-hosted, angry-marimo]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          clean: true

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Create .env file
        run: |
          cat <<EOF > .env
          NODE_ENV=production
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          MARIMO_SECRET_KEY=${{ secrets.MARIMO_SECRET_KEY }}
          NEXT_URL=${{ secrets.NEXT_URL }}
          NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}
          COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN }}
          COOKIE_TOKEN=${{ secrets.COOKIE_TOKEN }}
          NEXT_TOSS_SECRET_KEY=${{ secrets.NEXT_TOSS_SECRET_KEY }}
          NEXT_PUBLIC_TOSS_CLIENT_KEY=${{ secrets.NEXT_PUBLIC_TOSS_CLIENT_KEY }}
          EOF

      - name: Install Dependencies
        run: npm ci

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Vitest Tests
        run: npm run test

      - name: Run Playwright Tests
        run: |
          export $(grep -v '^#' .env | xargs)
          npm run playwright


  # 배포 단계
  deploy:
    needs: test  # 테스트가 완료된 후 배포
    runs-on: [self-hosted, angry-marimo]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      - name: Build Next.js Project
        run: npm run build

      - name: Deploy to Remote Server via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 23
          script: |
            cd ~

            # 리포지토리 확인 후 처리
            if [ ! -d "/home/angry_marimo/angry_marimo/.git" ]; then
              echo "리포지토리가 없습니다. 클론을 진행합니다..."
              git clone --depth=1 https://github.com/FRONT-END-BOOTCAMP-PLUS-3/angry_marimo.git
            else
              echo "리포지토리가 존재합니다. 최신 코드 가져오기..."
              cd /home/angry_marimo/angry_marimo
              git fetch origin main
              if ! git diff --quiet HEAD origin/main; then
                git reset --hard origin/main
                git checkout main
              else
                echo "변경 사항 없음"
              fi
            fi

            cd /home/angry_marimo/angry_marimo

            # 환경 변수 업데이트
            cat <<EOF > .env
            NODE_ENV=production
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            MARIMO_SECRET_KEY=${{ secrets.MARIMO_SECRET_KEY }}
            NEXT_URL=${{ secrets.NEXT_URL }}
            NEXT_PUBLIC_URL=${{ secrets.NEXT_PUBLIC_URL }}
            COOKIE_DOMAIN=${{ secrets.COOKIE_DOMAIN }}
            COOKIE_TOKEN=${{ secrets.COOKIE_TOKEN }}
            NEXT_TOSS_SECRET_KEY=${{ secrets.NEXT_TOSS_SECRET_KEY }}
            NEXT_PUBLIC_TOSS_CLIENT_KEY=${{ secrets.NEXT_PUBLIC_TOSS_CLIENT_KEY }}
            EOF

            # 패키지 업데이트 및 빌드
            npm ci
            npm run build

            # PM2 프로세스 확인 후 처리
            if pm2 list | grep -q 'angry-marimo'; then
              echo "프로세스가 실행 중입니다. Reload 진행..."
              pm2 restart angry-marimo
            else
              echo "프로세스가 실행 중이 아닙니다. 새로 실행합니다..."
              pm2 start npm --name "angry-marimo" -- run start -- -p 3008
              pm2 save
            fi
